#!/bin/bash
#Author: Clement Delalande - http://github.com/iKlem
#Version : 0.3

blue="\e[34m"
red="\e[91m"
green="\e[32m"
yellow="\e[93m"
default="\e[0m"

nodeMinVersion=4

rootDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
screepsBin="${rootDir}/node_modules/screeps/bin"
# TODO: change this variable when the SSMC will be implemented
# lastLogDir="$( basename $( ls -td -- ${server}/logs/* | head -n 1 ) )"
# TODO: change this variable when the mod manager will be implemented
# mods="${rootDir}/mods"

deps=("python2.7" "tmux" "nodejs" "wget")
missingDeps=()

checking_dependencies () {
  nbDeps=0
  echo -e " ├─┬ ${yellow}Checking dependencies${default}"
  # For each dependencies we check it with dpkg-query.
  # TODO: test on other distro.
  for pkg in "${deps[@]}"; do
    if [ "${deps[-1]}" == "${pkg}" ]; then
      echo -e " │ └─── Checking for $pkg... \t\c"
    else
      echo -e " │ ├─── Checking for $pkg... \t\c"
    fi
    sleep 0.5
    dpkg-query -W -f='${Status}' "${pkg}" 2> /dev/null | grep -q -P '^install ok installed$'
    if [ $? -eq 1 ]; then
      echo -e "[ ${red}MISSING${default} ]"
      ((nbDeps++))
      missingDeps+=("${pkg}")
    else
      echo -e "[ ${green}OK${default} ]"
    fi
  done
}

install_dependencies () {
  if [ $nbDeps -gt 0 ]; then
    echo -e " ├─┬ ${yellow}Installing dependencies${default}"
    sudo apt-get install "${missingDeps[@]}"
  fi
  echo -e " ${green}└─── All dependencies are installed!${default}"
}

checking_for_package_file () {
  echo -e " ├─┬ ${yellow}Checking the package.json file${default}"
  if [ -e ${rootDir}/package.json ]; then
    echo -e " │ ${green}└─── The package.json file exist.${default}"
  else
    echo -e " │ ${red}├─── The package.json file is missing!${default}"
    echo " │ ├─── Downloading default package.json..."
    echo ""
    wget "https://raw.githubusercontent.com/iKlem/linux-screeps-server-manager/master/package.json" -q --show-progress
    echo ""
    echo " │ └─── Downloaded!"
  fi
}

install_screeps () {
  echo -e " ├─${yellow}┬ Downloading Screeps server${default}"
  echo -e " ┊ ${yellow}└────────────────────────────${default}"
  echo ""
  npm install --save screeps@latest
  echo ""
  echo -e " │  ${green}Screeps server downloaded${default}"
  echo -e " │"
  echo -e " ├─${yellow}┬ Starting configuration${default}"
  echo -e " ┊ ${yellow}└────────────────────────${default}"
  echo ""
  node ${screepsBin}/screeps.js init
  echo ""
  echo -e " ┊  ${green}Done!${default}"
}

install_all () {
  sleep 2 && clear
  echo -e "\n${yellow}│${blue} Installation ${default}"
  echo -e "${yellow}└┬─────────────┘${default}"
  read -e -p " ├── Installing in ${rootDir} ? [y] " ok
  if [ -z "${ok}" ]; then
    echo " ┊"
    checking_dependencies
    echo " ┊"
    checking_for_package_file
    echo " ┊"
    if [ -d "${screepsBin}" ]; then
      echo -e "${green} │"
      echo -e " └─── The server is already installed! You can launch it with the \"start\" command.${default}"
    else
      install_screeps
      sleep 0.5
      echo -e "${green} │"
      echo -e " └─── The server has been fully installed ! You can launch it with the \"start\" command.${default}"
    fi
    if [ $nbDeps -gt 0 ]; then
      echo -e "\n[ ${yellow}WARNING${default} ] Some dependencies aren't installed. Before starting your server you will need to install them."
      echo -e "            Command to run in root user : '${0} install-deps' OR 'apt-get install ${missingDeps[@]}'"
      echo -e "\n[ ${blue}INFO${default} ] NodeJS version need to be 4 or later."
    fi
  else
    echo -e "${red} │"
    echo -e " └────── Installation aborted${default}"
    echo ""
    exit 9
  fi
}

check_server_up () {
  sleep 0.5
  retval=$(tmux list-sessions 2>&1 | awk '{print $1}' | grep -Ec "screeps")
}

update_screeps () {
  # TODO: add visual and do the stop & start here.
  stop_server
  echo -e "\n${yellow}│${blue} Updating server ${default}"
  echo -e "${yellow}└─────────────────┘${default}\n"
  npm update screeps
  start_server
}

start_server () {
  echo -e "${yellow}│${blue} Starting server ${default}"
  echo -e "${yellow}└┬────────────────┘${default}"
  check_server_up
  if [ $retval -eq 1 ]; then
    echo -e "${red} └── Error: Server is already started. You can't start more than 1 server with this script (wait for a next update ;) )${default}\n  "
    exit 2
  else
    if [ -d "${screepsBin}" ]; then
      tmux new-session -s screeps -d && tmux send-keys -t screeps "node ${screepsBin}/screeps.js start" ENTER
      check_server_up
      if [ $retval -eq 1 ]; then
        echo -e " ${green}└─┬ Server started${default}"
        echo -e "   ├─── Type 'tmux attach -t screeps' to get to the server screen"
        echo -e "   ├─── Do CTRL+B and d to detach from the server screen"
        echo -e "   └─── More commands/informations with the \"$0 help\" command"
      else
        echo -e "[ ${red}ERROR${default} ]"
        echo -e " └── There was an error when starting the server..."
        exit 3
      fi
    else
      echo -e "[ ${red}ERROR${default} ]"
      echo -e " └── The server isn't installed. Please launch the installer with \"$0 install\"\n"
      exit 4
    fi
  fi
}

stop_server () {
  echo -e "${yellow}│${blue} Stopping server ${default}"
  echo -e "${yellow}└┬────────────────┘${default}"
  check_server_up
  if [ $retval -eq 1 ]; then
    tmux kill-session -t screeps
    sleep 0.5
    check_server_up
    if [ $retval -eq 0 ]; then
      echo -e "${green} └── Server is stopped!${default}"
    else
      echo -e "[ ${green}OK?${default} ]"
    fi
  else
    echo -e "${red} └── ERROR: Server isn't started. No need to stop it.${default}\n"
  fi
}

# TODO: Update this part to check directly the screeps server instead of tmux.
show_status () {
  echo -e "${yellow}│${blue} Checking server status ${default}"
  echo -e "${yellow}└┬───────────────────────┘${default}"
  check_server_up
  if [ $retval -eq 1 ]; then
    echo -e " └── Server is ${green}OK${default}."
  else
    echo -e " └── Server is ${red}DOWN${default}."
  fi
}

open_cli_console () {
  echo -e "${yellow}│${blue} Opening Screeps CLI...${default}   (CTRL+C two times to quit)"
  echo -e "${yellow}└┬───────────────────────┘${default}"
  check_server_up
  if [ $retval -eq 1 ]; then
    echo ""
    node "${screepsBin}"/screeps.js cli
  else
    echo -e "${red} └── ERROR: The server can't be reached. Maybe it's not started?${default}\n"
    exit 5
  fi
}

usage () {
  echo "Usage : $0 cmd"
  echo ""
  echo -e "${yellow}│${blue} Commands ${default}"
  echo -e "${yellow}└┬─────────┘${default}"
  echo -e " ├── install,         i \t - Install the dependencies and the Screeps server."
  echo -e " ├── install-screeps, is\t - Install the Screeps server, can be useful for getting back missing files."
  echo -e " ├── install-deps,    id\t - Install the dependencies."
  echo -e " ├── start,           st\t - Launch the server."
  echo -e " ├── stop,            sp\t - Stop the server."
  echo -e " ├── restart,         r \t - Restart the server."
  echo -e " ├── update,          u \t - Update the server."
  echo -e " ├── status             \t - Show the server status."
  echo -e " ├── cli                \t - Open the Screeps CLI (server need to be started)."
  # TODO: add the SSMC :)
  # echo -e " ├── console,         c \t - Open the SSMC (Screeps Server Manager Console)."
  echo -e " └── help,            h \t - Show this command list."
  echo ""
}

# IDEA: add "tmux set mouse-select-pane" when creating the SSMC.

echo -e "${yellow}┌──────────────────────────────────┐${default}"
echo -e "${blue}  Screeps Server Manager for Linux${default}"
echo -e "${yellow}└┬─────────────────────────────────┘${default}"
echo " ├── Made by iKlem - v0.3"
echo " └── https://github.com/iKlem"
echo ""
case "$1" in
  i|install)
    install_all
    ;;
  is|install-screeps)
    checking_for_package_file
    if [ -d "${screepsBin}" ]; then
      echo -e "${green} │"
      echo -e " └─── The server is already installed! You can launch it with the \"start\" command.${default}"
    else
      install_screeps
      sleep 0.5
      echo -e "${green} │"
      echo -e " └─── The server has been fully installed ! You can launch it with the \"start\" command.${default}"
    fi
    ;;
  id|install-deps)
    checking_dependencies
    install_dependencies
    ;;
  st|start)
    start_server
    ;;
  sp|stop)
    stop_server
    ;;
  r|restart)
    stop_server
    echo ""
    start_server
    ;;
  status)
    show_status
    ;;
  cli)
    open_cli_console
    ;;
  config)
    start_config
    ;;
  u|update)
    update_screeps
    ;;
  h|help)
    usage
    ;;
  *)
    if [ -n "$1" ]; then
      echo -e "[ ${red}ERROR${default} ] -> Unknown command: $0 $1\n"
    fi
    usage
    exit 1
    ;;
esac
echo ""
exit 0
